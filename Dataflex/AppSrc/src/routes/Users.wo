Use cWebHttpMultipartFormDataHandler.pkg

Struct stResponseUsers
    Integer iTimeEnlapse
    String sMessage
End_Struct

Object oUsers is a cWebHttpMultipartFormdataHandler
    
    Set psPath to "users"
    Set psVerbs to "POST"

    Property Integer piOutChannel -1
        
    Procedure OnHttpPost String sPath String sContentType String sAcceptType Integer iSize
        TimeSpan tsTimeEnlapse
        DateTime dtInitialTimer
        Boolean bSuccess
        Handle hoJson
        UChar[] ucData
        stResponseUsers tResponse
        
        Move (CurrentDateTime()) to dtInitialTimer
        Get ParseMultipartFormData to bSuccess
        
        If (bSuccess) Begin
            Move (CurrentDateTime()-dtInitialTimer) to tsTimeEnlapse
            
            Move (SpanTotalMilliseconds(tsTimeEnlapse)) to tResponse.iTimeEnlapse
            Move "Succesfully written file!" to tResponse.sMessage
            
            Get Create (RefClass(cJsonObject)) to hoJson
            Send DataTypeToJson of hoJson tResponse
            Set peWhiteSpace of hoJson to jpWhitespace_Spaced
            Get StringifyUtf8 of hoJson to ucData

            
            Send OutputUChar ucData
        End
    End_Procedure
    
    Procedure OnFileStart String sFieldName String sFileName String sContentType Boolean  ByRef bAbort
        String sPath
        Boolean bExists
        Integer iChnl
        
        //  Open a file for writing
        If (sFieldName = "file") Begin
            Get psDataPath of (phoWorkspace(ghoApplication)) to sPath
            Move (sPath + "\Uploads\usuarios.json") to sPath
            
            File_Exist sPath bExists
            
            If (not(bExists)) Begin
                Move (Seq_New_Channel()) to iChnl
                Direct_Output channel iChnl ("binary:" + sPath)
                Set piOutChannel to iChnl
            End
            Else Begin
                Send SetResponseStatus 500 "File already exists" 4
                Move True to bAbort
            End
        End     
        Else Begin
            Send SetResponseStatus 400 "Invalid Field" 5
            Move True to bAbort
        End
    End_Procedure

    Procedure OnFileChunk String sFieldName UChar[]  ByRef ucData
        Integer iChnl
        
        //  Write the chunks to the opened file
        If (sFieldName = "file") Begin
            Get piOutChannel to iChnl
            If (iChnl >= 0) Begin
                Write channel iChnl ucData
            End
        End
    End_Procedure
    
    Procedure OnFileFinished String sFieldName
        Integer iChnl
        
        //  Close when finished
        If (sFieldName = "file") Begin
            Get piOutChannel to iChnl
            If (iChnl >= 0) Begin
                Close_Output channel iChnl
                Send Seq_Release_Channel iChnl
                
                Set piOutChannel to -1
            End
        End
    End_Procedure
End_Object
