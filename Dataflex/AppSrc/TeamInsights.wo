Use cWebHttpHandler.pkg

Struct stTeamProjects
    String nome
    Boolean concluido
End_Struct

Struct stTeamLeader
    String nome
End_Struct

Struct stTeamInsights
    String nome
    stTeamLeader[] lideres
    Integer totalProjetos
    Integer totalConcluidos
    Integer totalMembros
    Integer membrosAtivos
    Number membrosAtivosPorcentagem
End_Struct

Struct stResponseTeamInsights
    Integer iTimeEnlapse
    stTeamInsights[] tTeam
End_Struct

Object oTeamInsights is a cWebHttpHandler
    
    Set psPath to "team-insights"
    Set psVerbs to "GET"

    Procedure OnHttpGet String sPath String sAcceptType
        TimeSpan tsTimeEnlapse
        DateTime dtInitialTimer
        Integer iChnl iCount iCountTeam iSizeTeam iCountProjetos
        Handle hoJson
        Boolean bSuccess bExists bExistsTeam
        stResponseTeamInsights tResponse
        stUsers[] tUsers tUsersFiltered
        stTeamInsights[] tTeam
        UChar[] ucData ucFile
        
        Move (CurrentDateTime()) to dtInitialTimer
        
        Get psDataPath of (phoWorkspace(ghoApplication)) to sPath
        Move (sPath + "\Uploads\usuarios.json") to sPath
        
        File_Exist sPath bExists
        
        If (bExists) Begin
            //Ler arquivo JSON
            Move (Seq_New_Channel()) to iChnl
            Direct_Input channel iChnl ("binary:" + sPath)
            Read_Block channel iChnl ucFile -1
            Close_Input channel iChnl
            Send Seq_Release_Channel iChnl

            //JSON to DataType
            Get Create (RefClass(cJsonObject)) to hoJson
            Get ParseUtf8 of hoJson ucFile to bSuccess
            
            If (not(bSuccess)) Begin
                Send Destroy of hoJson
                Send SetResponseStatus 500 "JSON not loaded" 2
                Procedure_Return
            End
            
            Get JsonToDataType of hoJson to tUsers
            Send Destroy of hoJson
            
            //Filtrar
            For iCount from 0 to (SizeOfArray(tUsers)-1)
                For iCountTeam from 0 to (SizeOfArray(tTeam)-1)
                    If (tUsers[iCount].equipe.nome = tTeam[iCountTeam].nome) Begin
                        Move True to bExistsTeam
                        
                        If (tUsers[iCount].equipe.lider=True) Move tUsers[iCount].nome to tTeam[iCountTeam].lideres[SizeOfArray(tTeam[iCountTeam].lideres)].nome
                        If (tUsers[iCount].ativo=True) Increment tTeam[iCountTeam].membrosAtivos
                        
                        For iCountProjetos from 0 to (SizeOfArray(tUsers[iCount].equipe.projetos)-1)
                            If (tUsers[iCount].equipe.projetos[iCountProjetos].concluido) Increment tTeam[iCountTeam].totalConcluidos
                            Increment tTeam[iCountTeam].totalProjetos
                        Loop
                        
                        If (tUsers[iCount].ativo=True) Increment tTeam[iCountTeam].totalConcluidos
                        
                        Increment tTeam[iCountTeam].totalMembros
                    End
                Loop
                
                If (not(bExistsTeam)) Begin
                    Move (SizeOfArray(tTeam)) to iCountTeam
                    
                    If (tUsers[iCount].equipe.lider=True) Move tUsers[iCount].nome to tTeam[iCountTeam].lideres[SizeOfArray(tTeam[iCountTeam].lideres)].nome
                    If (tUsers[iCount].ativo=True) Move 1 to tTeam[iCountTeam].membrosAtivos
                    
                    For iCountProjetos from 0 to (SizeOfArray(tUsers[iCount].equipe.projetos)-1)
                        If (tUsers[iCount].equipe.projetos[iCountProjetos].concluido) Move 1 to tTeam[iCountTeam].totalConcluidos
                        Move 1 to tTeam[iCountTeam].totalProjetos
                    Loop
                    
                    If (tUsers[iCount].ativo=True) Increment tTeam[iCountTeam].totalConcluidos
                    
                    Move 1 to tTeam[iCountTeam].totalMembros
                End                
            Loop
            
            For iCountTeam from 0 to (SizeOfArray(tTeam)-1)
                Move (tTeam[iCountTeam].totalMembros/tTeam[iCountTeam].membrosAtivos) to tTeam[iCountTeam].membrosAtivosPorcentagem
            Loop
            
            
            
            Move (CurrentDateTime()-dtInitialTimer) to tsTimeEnlapse
            Move (SpanTotalMilliseconds(tsTimeEnlapse)) to tResponse.iTimeEnlapse
            Move tTeam to tResponse.tTeam
            
            //Parse DataType to Json
            Get Create (RefClass(cJsonObject)) to hoJson
            Send DataTypeToJson of hoJson tResponse
            Set peWhiteSpace of hoJson to jpWhitespace_Spaced
            Get StringifyUtf8 of hoJson to ucData
            Send Destroy of hoJson

            Send OutputUChar ucData
        End
        Else Begin
            Send SetResponseStatus 500 "File not exists" 2
        End        
    End_Procedure
    
End_Object
